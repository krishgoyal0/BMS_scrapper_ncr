name: BookMyShow Event Scraper

on:
  schedule:
    - cron: '0 9,20 * * *'
  workflow_dispatch:

permissions:
  contents: write # Needed for committing and pushing changes

jobs:
  scrape-and-process:
    runs-on: ubuntu-latest
    
    steps:
    # --- Setup ---
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true # Good for pushing changes

    # --- Environment ---
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install chromium
        playwright install-deps

    # --- Scraping Pipeline ---
    - name: Run URL fetcher
      run: python 01_url_fetcher.py

    - name: Run screenshot capture
      run: python 02_url_to_ss.py

    - name: Run OCR processing
      run: python 03_ss_to_json.py

    - name: Convert to Excel
      run: python 04_json_to_excel.py

    # --- Google Sheets Upload ---
    - name: Create service_account.json from secret # This is the corrected step
      env:
        GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }} # Use the correct secret name and make it available as an env var
      run: |
        echo "${{ env.GOOGLE_SERVICE_ACCOUNT_KEY }}" > service_account.json
        # Optional: Add jq validation if you have jq installed on the runner and want stricter validation
        # If jq is not installed by default or needed, remove this line.
        # jq empty service_account.json || { echo "Service account JSON is invalid!"; exit 1; }

    - name: Upload to Google Sheets
      # No need for an env block here, as 05_upload_to_sheets.py reads from the created file
      run: python 05_upload_to_sheets.py

    # --- Git Operations ---
    - name: Commit changes
      id: commit # Keep the ID for conditional push
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Add all relevant output files
        git add data/ reports/ events.xlsx # IMPORTANT: Add events.xlsx if it's created/modified by 04_json_to_excel.py
        
        if git diff --cached --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes to commit."
        else
          git commit -m "Auto-update: Event data [skip ci]"
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Changes committed."
        fi

    - name: Push changes
      if: steps.commit.outputs.changes == 'true' # Only push if changes were committed
      run: |
        # Use git pull --rebase to get latest changes and reapply yours,
        # which is safer than just rebase followed by push,
        # especially if other commits might land while the workflow runs.
        git pull --rebase origin main # Assuming 'main' is your branch
        git push

    # --- Artifacts ---
    - name: Archive results
      uses: actions/upload-artifact@v4
      with:
        name: event-reports
        path: |
          reports/
          screenshots/
          events.xlsx
